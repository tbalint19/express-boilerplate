document.querySelector('mutation-test-report-app').report = {"files":{"/Users/balinttoth/Development/jslibs/express-boilerplate/src/app.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":32,"line":1},"start":{"column":23,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"1","location":{"end":{"column":30,"line":2},"start":{"column":22,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"3","location":{"end":{"column":39,"line":4},"start":{"column":26,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"4","location":{"end":{"column":55,"line":6},"start":{"column":28,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"2","location":{"end":{"column":43,"line":3},"start":{"column":28,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"5","location":{"end":{"column":59,"line":7},"start":{"column":30,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"6","location":{"end":{"column":37,"line":10},"start":{"column":21,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"7","location":{"end":{"column":37,"line":11},"start":{"column":21,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"9","location":{"end":{"column":21,"line":23},"start":{"column":9,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"8","location":{"end":{"column":26,"line":18},"start":{"column":16,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"10","location":{"end":{"column":21,"line":24},"start":{"column":9,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"var express = require('express')\nvar logger = require('morgan')\nvar cookieParser = require('cookie-parser')\nvar bodyParser = require('body-parser')\n\nvar errorHandler = require('./middleware/errorHandler')\nvar authMiddleware = require('./middleware/authMiddleware')\n// require middleware\n\nvar users = require('./routes/users')\nvar tasks = require('./routes/tasks')\n// require routes\n\nvar app = express()\n\napp.use(bodyParser.json())\napp.use(cookieParser())\napp.use(logger('combined'))\n\napp.use(authMiddleware)\n// use middleware\n\napp.use('/api/users', users)\napp.use('/api/tasks', tasks)\n// use routes\n\napp.use(errorHandler(app))\n\nmodule.exports = app\n"},"/Users/balinttoth/Development/jslibs/express-boilerplate/src/middleware/authMiddleware.js":{"language":"javascript","mutants":[{"id":"11","location":{"end":{"column":38,"line":1},"start":{"column":21,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"13","location":{"end":{"column":36,"line":4},"start":{"column":21,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"14","location":{"end":{"column":11,"line":5},"start":{"column":7,"line":5}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"15","location":{"end":{"column":11,"line":5},"start":{"column":7,"line":5}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"16","location":{"end":{"column":11,"line":5},"start":{"column":7,"line":5}},"mutatorName":"PrefixUnaryExpression","replacement":"jwt","status":"Survived"},{"id":"12","location":{"end":{"column":2,"line":8},"start":{"column":42,"line":3}},"mutatorName":"Block","replacement":"{}","status":"Killed"}],"source":"var parse = require('../utils/jwt.js')\n\nvar authMiddleware = (req, res, next) => {\n  var jwt = req.get('Authorization')\n  if (!jwt) return next()\n  req.user = parse(jwt)\n  next()\n}\n\nmodule.exports = authMiddleware\n"},"/Users/balinttoth/Development/jslibs/express-boilerplate/src/middleware/errorHandler.js":{"language":"javascript","mutants":[{"id":"17","location":{"end":{"column":2,"line":7},"start":{"column":54,"line":1}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"18","location":{"end":{"column":31,"line":2},"start":{"column":14,"line":2}},"mutatorName":"BinaryExpression","replacement":"err.status && 500","status":"NoCoverage"},{"id":"19","location":{"end":{"column":31,"line":2},"start":{"column":14,"line":2}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"20","location":{"end":{"column":31,"line":2},"start":{"column":14,"line":2}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"21","location":{"end":{"column":4,"line":6},"start":{"column":12,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"22","location":{"end":{"column":44,"line":5},"start":{"column":12,"line":5}},"mutatorName":"BinaryExpression","replacement":"app.get('env') !== 'development'","status":"NoCoverage"},{"id":"23","location":{"end":{"column":44,"line":5},"start":{"column":12,"line":5}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"24","location":{"end":{"column":44,"line":5},"start":{"column":12,"line":5}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"25","location":{"end":{"column":25,"line":5},"start":{"column":20,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"26","location":{"end":{"column":44,"line":5},"start":{"column":31,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"}],"source":"var errorHandler = (app) => (err, req, res, next) => {\n  res.status(err.status || 500)\n  res.json({\n    message: err.message,\n    error: app.get('env') === 'development' ? err : {},\n  })\n}\n\nmodule.exports = errorHandler\n"},"/Users/balinttoth/Development/jslibs/express-boilerplate/src/models/dto/user.js":{"language":"javascript","mutants":[{"id":"27","location":{"end":{"column":37,"line":1},"start":{"column":22,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"28","location":{"end":{"column":34,"line":4},"start":{"column":19,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"29","location":{"end":{"column":32,"line":4},"start":{"column":28,"line":4}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"30","location":{"end":{"column":4,"line":6},"start":{"column":37,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"31","location":{"end":{"column":25,"line":5},"start":{"column":15,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"32","location":{"end":{"column":34,"line":9},"start":{"column":19,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"33","location":{"end":{"column":32,"line":9},"start":{"column":28,"line":9}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"34","location":{"end":{"column":4,"line":12},"start":{"column":37,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"35","location":{"end":{"column":13,"line":10},"start":{"column":9,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"36","location":{"end":{"column":25,"line":11},"start":{"column":15,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"37","location":{"end":{"column":2,"line":17},"start":{"column":18,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"}],"source":"var mapper = require('object-mapper')\n\nvar userDto = (user) =>\n  mapper(user.get({ plain: true }), {\n    username: 'username',\n  })\n\nvar extendedUserDto = (user) =>\n  mapper(user.get({ plain: true }), {\n    id: 'id',\n    username: 'username',\n  })\n\nmodule.exports = {\n  userDto,\n  extendedUserDto,\n}\n"},"/Users/balinttoth/Development/jslibs/express-boilerplate/src/models/entity/task.js":{"language":"javascript","mutants":[{"id":"38","location":{"end":{"column":2,"line":17},"start":{"column":44,"line":2}},"mutatorName":"Block","replacement":"{}","status":"RuntimeError"},{"id":"39","location":{"end":{"column":37,"line":3},"start":{"column":31,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"40","location":{"end":{"column":4,"line":5},"start":{"column":39,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"41","location":{"end":{"column":4,"line":14},"start":{"column":32,"line":7}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"42","location":{"end":{"column":6,"line":13},"start":{"column":40,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"43","location":{"end":{"column":26,"line":9},"start":{"column":17,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"44","location":{"end":{"column":8,"line":12},"start":{"column":19,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"45","location":{"end":{"column":25,"line":11},"start":{"column":20,"line":11}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Survived"}],"source":"'use strict'\nmodule.exports = (sequelize, DataTypes) => {\n  var Task = sequelize.define('Task', {\n    title: DataTypes.STRING,\n  })\n\n  Task.associate = (models) => {\n    models.Task.belongsTo(models.User, {\n      onDelete: 'CASCADE',\n      foreignKey: {\n        allowNull: false,\n      },\n    })\n  }\n\n  return Task\n}\n"},"/Users/balinttoth/Development/jslibs/express-boilerplate/src/models/entity/user.js":{"language":"javascript","mutants":[{"id":"46","location":{"end":{"column":2,"line":12},"start":{"column":44,"line":2}},"mutatorName":"Block","replacement":"{}","status":"RuntimeError"},{"id":"47","location":{"end":{"column":37,"line":3},"start":{"column":31,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"48","location":{"end":{"column":4,"line":5},"start":{"column":39,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"49","location":{"end":{"column":4,"line":9},"start":{"column":32,"line":7}},"mutatorName":"Block","replacement":"{}","status":"Survived"}],"source":"'use strict'\nmodule.exports = (sequelize, DataTypes) => {\n  var User = sequelize.define('User', {\n    username: DataTypes.STRING,\n  })\n\n  User.associate = (models) => {\n    models.User.hasMany(models.Task)\n  }\n\n  return User\n}\n"},"/Users/balinttoth/Development/jslibs/express-boilerplate/src/models/index.js":{"language":"javascript","mutants":[{"id":"50","location":{"end":{"column":22,"line":3},"start":{"column":18,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"51","location":{"end":{"column":26,"line":4},"start":{"column":20,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"52","location":{"end":{"column":36,"line":5},"start":{"column":25,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"54","location":{"end":{"column":48,"line":7},"start":{"column":11,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"RuntimeError"},{"id":"55","location":{"end":{"column":48,"line":7},"start":{"column":11,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"RuntimeError"},{"id":"57","location":{"end":{"column":52,"line":8},"start":{"column":22,"line":8}},"mutatorName":"BinaryExpression","replacement":"__dirname - '/../../config.js'","status":"RuntimeError"},{"id":"58","location":{"end":{"column":52,"line":8},"start":{"column":34,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"53","location":{"end":{"column":48,"line":7},"start":{"column":11,"line":7}},"mutatorName":"BinaryExpression","replacement":"process.env.NODE_ENV && 'development'","status":"Killed"},{"id":"60","location":{"end":{"column":28,"line":11},"start":{"column":5,"line":11}},"mutatorName":"IfStatement","replacement":"true","status":"RuntimeError"},{"id":"56","location":{"end":{"column":48,"line":7},"start":{"column":35,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"59","location":{"end":{"column":28,"line":11},"start":{"column":5,"line":11}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"62","location":{"end":{"column":2,"line":20},"start":{"column":8,"line":13}},"mutatorName":"Block","replacement":"{}","status":"RuntimeError"},{"id":"63","location":{"end":{"column":37,"line":22},"start":{"column":16,"line":22}},"mutatorName":"BinaryExpression","replacement":"__dirname - '/entity'","status":"RuntimeError"},{"id":"64","location":{"end":{"column":37,"line":22},"start":{"column":28,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"65","location":{"end":{"column":4,"line":27},"start":{"column":21,"line":23}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"67","location":{"end":{"column":79,"line":25},"start":{"column":7,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"61","location":{"end":{"column":2,"line":13},"start":{"column":30,"line":11}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"66","location":{"end":{"column":79,"line":25},"start":{"column":7,"line":25}},"mutatorName":"BinaryExpression","replacement":"file.indexOf('.') !== 0 && file !== basename || file.slice(-3) === '.js'","status":"Survived"},{"id":"70","location":{"end":{"column":51,"line":25},"start":{"column":7,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"68","location":{"end":{"column":79,"line":25},"start":{"column":7,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"72","location":{"end":{"column":30,"line":25},"start":{"column":7,"line":25}},"mutatorName":"BinaryExpression","replacement":"file.indexOf('.') === 0","status":"Killed"},{"id":"73","location":{"end":{"column":30,"line":25},"start":{"column":7,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"69","location":{"end":{"column":51,"line":25},"start":{"column":7,"line":25}},"mutatorName":"BinaryExpression","replacement":"file.indexOf('.') !== 0 || file !== basename","status":"Survived"},{"id":"75","location":{"end":{"column":23,"line":25},"start":{"column":20,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"76","location":{"end":{"column":51,"line":25},"start":{"column":34,"line":25}},"mutatorName":"BinaryExpression","replacement":"file === basename","status":"Killed"},{"id":"77","location":{"end":{"column":51,"line":25},"start":{"column":34,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"71","location":{"end":{"column":51,"line":25},"start":{"column":7,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"79","location":{"end":{"column":79,"line":25},"start":{"column":55,"line":25}},"mutatorName":"BinaryExpression","replacement":"file.slice(-3) !== '.js'","status":"Killed"},{"id":"80","location":{"end":{"column":79,"line":25},"start":{"column":55,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"74","location":{"end":{"column":30,"line":25},"start":{"column":7,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"82","location":{"end":{"column":68,"line":25},"start":{"column":66,"line":25}},"mutatorName":"PrefixUnaryExpression","replacement":"+3","status":"Killed"},{"id":"83","location":{"end":{"column":79,"line":25},"start":{"column":74,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"78","location":{"end":{"column":51,"line":25},"start":{"column":34,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"84","location":{"end":{"column":4,"line":31},"start":{"column":22,"line":28}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"85","location":{"end":{"column":35,"line":29},"start":{"column":27,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"86","location":{"end":{"column":68,"line":29},"start":{"column":47,"line":29}},"mutatorName":"BinaryExpression","replacement":"__dirname - '/entity'","status":"RuntimeError"},{"id":"87","location":{"end":{"column":68,"line":29},"start":{"column":59,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"81","location":{"end":{"column":79,"line":25},"start":{"column":55,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"89","location":{"end":{"column":30,"line":34},"start":{"column":7,"line":34}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"88","location":{"end":{"column":2,"line":37},"start":{"column":40,"line":33}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"90","location":{"end":{"column":30,"line":34},"start":{"column":7,"line":34}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"91","location":{"end":{"column":4,"line":36},"start":{"column":32,"line":34}},"mutatorName":"Block","replacement":"{}","status":"Survived"}],"source":"'use strict'\n\nvar fs = require('fs')\nvar path = require('path')\nvar Sequelize = require('sequelize')\nvar basename = path.basename(__filename)\nvar env = process.env.NODE_ENV || 'development'\nvar config = require(__dirname + '/../../config.js')[env]\nvar db = {}\n\nif (config.use_env_variable) {\n  var sequelize = new Sequelize(process.env[config.use_env_variable], config)\n} else {\n  var sequelize = new Sequelize(\n    config.database,\n    config.username,\n    config.password,\n    config\n  )\n}\n\nfs.readdirSync(__dirname + '/entity')\n  .filter((file) => {\n    return (\n      file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js'\n    )\n  })\n  .forEach((file) => {\n    var model = sequelize['import'](path.join(__dirname + '/entity', file))\n    db[model.name] = model\n  })\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db)\n  }\n})\n\ndb.sequelize = sequelize\ndb.Sequelize = Sequelize\n\nmodule.exports = db\n"},"/Users/balinttoth/Development/jslibs/express-boilerplate/src/routes/tasks.js":{"language":"javascript","mutants":[{"id":"92","location":{"end":{"column":33,"line":1},"start":{"column":22,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"93","location":{"end":{"column":32,"line":2},"start":{"column":23,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"96","location":{"end":{"column":4,"line":9},"start":{"column":17,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"94","location":{"end":{"column":21,"line":5},"start":{"column":13,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"95","location":{"end":{"column":2,"line":12},"start":{"column":43,"line":5}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"99","location":{"end":{"column":4,"line":19},"start":{"column":18,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"100","location":{"end":{"column":6,"line":18},"start":{"column":12,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"97","location":{"end":{"column":31,"line":14},"start":{"column":15,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"98","location":{"end":{"column":2,"line":22},"start":{"column":53,"line":14}},"mutatorName":"Block","replacement":"{}","status":"Survived"}],"source":"var models = require('../models')\nvar express = require('express')\nvar router = express.Router()\n\nrouter.post('/tasks', async (req, res) => {\n  let newTask = {\n    title: req.body.title,\n    UserId: req.query.user_id,\n  }\n  let savedTask = await models.Task.create(newTask)\n  res.json(taskDto(savedTask))\n})\n\nrouter.delete('tasks/:task_id', async (req, res) => {\n  let criteria = {\n    where: {\n      id: req.params.task_id,\n    },\n  }\n  await models.Task.destroy(criteria)\n  res.status(201).end()\n})\n\nmodule.exports = router\n"},"/Users/balinttoth/Development/jslibs/express-boilerplate/src/routes/users.js":{"language":"javascript","mutants":[{"id":"101","location":{"end":{"column":33,"line":1},"start":{"column":22,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"102","location":{"end":{"column":32,"line":2},"start":{"column":23,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"105","location":{"end":{"column":21,"line":7},"start":{"column":12,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"103","location":{"end":{"column":15,"line":5},"start":{"column":12,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"108","location":{"end":{"column":4,"line":15},"start":{"column":18,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"109","location":{"end":{"column":6,"line":14},"start":{"column":12,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"106","location":{"end":{"column":23,"line":10},"start":{"column":12,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"107","location":{"end":{"column":2,"line":18},"start":{"column":45,"line":10}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"110","location":{"end":{"column":16,"line":20},"start":{"column":13,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"112","location":{"end":{"column":4,"line":23},"start":{"column":17,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"113","location":{"end":{"column":23,"line":28},"start":{"column":12,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"104","location":{"end":{"column":2,"line":8},"start":{"column":37,"line":5}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"116","location":{"end":{"column":6,"line":32},"start":{"column":12,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"117","location":{"end":{"column":4,"line":36},"start":{"column":14,"line":34}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"118","location":{"end":{"column":26,"line":41},"start":{"column":15,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"119","location":{"end":{"column":2,"line":49},"start":{"column":48,"line":41}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"120","location":{"end":{"column":4,"line":46},"start":{"column":18,"line":42}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"121","location":{"end":{"column":6,"line":45},"start":{"column":12,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"111","location":{"end":{"column":2,"line":26},"start":{"column":38,"line":20}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"115","location":{"end":{"column":4,"line":33},"start":{"column":18,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"114","location":{"end":{"column":2,"line":39},"start":{"column":45,"line":28}},"mutatorName":"Block","replacement":"{}","status":"Killed"}],"source":"var models = require('../models')\nvar express = require('express')\nvar router = express.Router()\n\nrouter.get('/', async (req, res) => {\n  let users = await models.User.findAll()\n  res.json({ users })\n})\n\nrouter.get('/:user_id', async (req, res) => {\n  let criteria = {\n    where: {\n      id: user_id\n    }\n  }\n  let user = await models.User.findAll(criteria)\n  res.json(user)\n})\n\nrouter.post('/', async (req, res) => {\n  let newUser = {\n    username: req.body.username,\n  }\n  let savedUser = await models.User.create(newUser)\n  res.json(savedUser)\n})\n\nrouter.put('/:user_id', async (req, res) => {\n  let criteria = {\n    where: {\n      id: req.params.user_id\n    }\n  }\n  let data = {\n    username: req.body.username\n  }\n  let savedUser = await models.User.update(data, criteria)\n  res.json(savedUser)\n})\n\nrouter.delete('/:user_id', async (req, res) => {\n  let criteria = {\n    where: {\n      id: req.params.user_id,\n    },\n  }\n  await models.User.destroy(criteria)\n  res.status(201).end()\n})\n\nmodule.exports = router\n"},"/Users/balinttoth/Development/jslibs/express-boilerplate/src/utils/jwt.js":{"language":"javascript","mutants":[{"id":"123","location":{"end":{"column":4,"line":4},"start":{"column":7,"line":2}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"124","location":{"end":{"column":50,"line":3},"start":{"column":47,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"125","location":{"end":{"column":64,"line":3},"start":{"column":56,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"126","location":{"end":{"column":4,"line":6},"start":{"column":15,"line":4}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"122","location":{"end":{"column":2,"line":7},"start":{"column":29,"line":1}},"mutatorName":"Block","replacement":"{}","status":"Survived"}],"source":"module.exports = (token) => {\n  try {\n    return JSON.parse(Buffer.from(token.split('.')[1], 'base64').toString())\n  } catch (e) {\n    return null\n  }\n}\n"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};